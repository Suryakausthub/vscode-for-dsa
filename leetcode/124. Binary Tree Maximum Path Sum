/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxPathSum(TreeNode* root) {
        int maxi =INT_MIN;
        maxsum(root, maxi);
        return maxi;
    }

    int maxsum(TreeNode* node, int& maximum){
        if(node == NULL) return 0;

        int leftsum = max(0, maxsum(node->left, maximum));
        int rightsum = max(0, maxsum(node->right, maximum));

        maximum = max(maximum, node->val+ leftsum+ rightsum);

        return node->val + max(leftsum, rightsum);
    }
};
