class Solution {
public:
    void dfs(int node , vector<int> &vis, vector<vector<int>> &vec){
            vis[node] = 1;
            for(auto it : vec[node]){
                if(!vis[it]){
                    dfs(it, vis, vec);
                }
            }
        }
    
    int findCircleNum(vector<vector<int>>& isConnected) {
        int n = isConnected.size();
        vector<vector<int>> vec(n);
        
        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                if(isConnected[i][j] ==1){
                    vec[i].push_back(j);
                    vec[j].push_back(i);
                }
            }
        }
        
        vector<int> vis(n,0);
        int cnt =0;
        for(int i=0; i<n; i++){
            if(!vis[i]){
                cnt++;
                dfs(i, vis, vec);
            }
        }
        
        
        return cnt;
    }
};
