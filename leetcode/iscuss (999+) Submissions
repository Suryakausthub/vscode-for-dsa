/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int fun(vector<int> &vec){
        int n=0;
        for(int i=0; i<vec.size(); i++){
            n = n*10 + vec[i];
            
        }
        return n;
    }
    
    int sumNumbers(TreeNode* root) {
        vector<int> vec;
        return summation(root, vec);
    }
    
    int summation(TreeNode* root, vector<int> &vec){
        if(root == nullptr){
            return 0;
        }
        
        vec.push_back(root->val);
        
        if(root->left == nullptr && root->right == nullptr){
            int path = fun(vec);
            vec.pop_back();
            return path;
        }
        
        int lh = summation(root->left, vec);
        int rh = summation(root->right, vec);
        vec.pop_back();
        return lh + rh;
    }
};
