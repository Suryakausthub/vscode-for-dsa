class Solution {
public:
    bool isValidSudoku(vector<vector<char>>& board) {
        int n = board.size();
        int m = board[0].size();
       
        for (int i = 0; i < n; i++) {
            unordered_map<char, int> row;
            unordered_map<char, int> col;
            for (int j = 0; j < m; j++) {
                if (board[i][j] != '.' && row[board[i][j]]++  >= 1) {
                    return false; 
                }
                
                if (board[j][i] != '.' && col[board[j][i]]++ >= 1) {
                    return false; 
                }
            }
        }

        for(int i=0; i<n; i= i+3){
            for(int j=0; j<m; j= j+3){
                unordered_map<char, int> mp1;
                for(int x=0; x< 3;x++){
                    for(int y=0; y<3; y++){
                        char ca = board[x+i][y+j];
                        if(ca != '.' && mp1[ca]++  >= 1){
                            return false;
                        }
                    }
                }
            }
        }

        return true;
    }
};
