/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        queue<TreeNode*> q;
        if (!root) return ans;
        bool rev = true;
        q.push(root);
        while(!q.empty()){
            int n =1;
            int x = q.size();
            vector<int> level;
            for(int i=0; i<x; i++){
                TreeNode* current = q.front();
                q.pop();
                if (current->left) q.push(current->left);
                if(current->right ) q.push(current->right);
                level.push_back(current->val);
            }
            if(!rev){
                reverse(level.begin(), level.end());
            }
            ans.push_back(level);
            rev = !rev;  
        }
        return ans;
    }
};
