/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> vec;
        string s;
        paths(vec, root,"");

        return vec;

    }

    vector<string> paths(vector<string> &vec, TreeNode* root, string s){
        if(root ==  NULL)  return vec;

        s = s + to_string(root->val);

        if(!root->left && !root->right)  vec.push_back(s);
        else{
            s = s + "->";
            if(root->left)  paths(vec, root->left, s);
        if(root->right)  paths(vec, root->right, s);
        }

        return vec;
    }
 };
